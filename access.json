{
  "openapi": "3.0.1",
  "info": {
    "title": "FINBOURNE Access Management API",
    "description": "### Introduction\r\n\r\nThis page documents the LUSID Access Management APIs from FINBOURNE Technology, which allow authorised users to query and update their access control policies and roles within the LUSID platform's Identity and Access Management system.\r\n\r\n",
    "termsOfService": "https://www.finbourne.com/legal/terms-conditions",
    "contact": {
      "name": "FINBOURNE Technology",
      "url": "https://www.finbourne.com",
      "email": "info@finbourne.com"
    },
    "version": "0.0.1085",
    "x-logo": {
      "url": "https://content.finbourne.com/LUSID-header.png",
      "backgroundColor": "#415464"
    }
  },
  "servers": [
    {
      "url": "https://www.lusid.com/access"
    }
  ],
  "paths": {
    "/api/licences": {
      "get": {
        "tags": [
          "Licences"
        ],
        "summary": "[EXPERIMENTAL] List Licences",
        "description": "Gets all Licences in a scope",
        "operationId": "ListLicences",
        "parameters": [
          {
            "name": "assignedTo",
            "in": "query",
            "description": "Optional. If specified, applies a filter for only Licences that are assigned to the specified tenant",
            "schema": {
              "type": "string",
              "description": "Optional. If specified, applies a filter for only Licences that are assigned to the specified tenant",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All of the licences in a scope",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyResponse"
                  }
                },
                "example": [
  {
    "id": {
      "scope": "FINBOURNE",
      "code": "dataset-licence-1"
    },
    "description": "Access to licensed dataset",
    "applications": [
      "LUSID"
    ],
    "grant": "Allow",
    "selectors": [
      {
        "idSelectorDefinition": {
          "identifier": {
            "scope": "FINBOURNE",
            "code": "dataset-licence-1"
          },
          "actions": [
            {
              "scope": "default",
              "activity": "Read",
              "entity": "Portfolio"
            }
          ],
          "name": "access-dataset-1",
          "description": "Licence for dataset 1"
        }
      }
    ],
    "when": {
      "activate": "2016-08-31T18:00:00.0000000+00:00",
      "deactivate": "2020-08-31T18:00:00.0000000+00:00"
    }
  }
]
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyResponse"
                  }
                },
                "example": [
  {
    "id": {
      "scope": "FINBOURNE",
      "code": "dataset-licence-1"
    },
    "description": "Access to licensed dataset",
    "applications": [
      "LUSID"
    ],
    "grant": "Allow",
    "selectors": [
      {
        "idSelectorDefinition": {
          "identifier": {
            "scope": "FINBOURNE",
            "code": "dataset-licence-1"
          },
          "actions": [
            {
              "scope": "default",
              "activity": "Read",
              "entity": "Portfolio"
            }
          ],
          "name": "access-dataset-1",
          "description": "Licence for dataset 1"
        }
      }
    ],
    "when": {
      "activate": "2016-08-31T18:00:00.0000000+00:00",
      "deactivate": "2020-08-31T18:00:00.0000000+00:00"
    }
  }
]
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyResponse"
                  }
                },
                "example": [
  {
    "id": {
      "scope": "FINBOURNE",
      "code": "dataset-licence-1"
    },
    "description": "Access to licensed dataset",
    "applications": [
      "LUSID"
    ],
    "grant": "Allow",
    "selectors": [
      {
        "idSelectorDefinition": {
          "identifier": {
            "scope": "FINBOURNE",
            "code": "dataset-licence-1"
          },
          "actions": [
            {
              "scope": "default",
              "activity": "Read",
              "entity": "Portfolio"
            }
          ],
          "name": "access-dataset-1",
          "description": "Licence for dataset 1"
        }
      }
    ],
    "when": {
      "activate": "2016-08-31T18:00:00.0000000+00:00",
      "deactivate": "2020-08-31T18:00:00.0000000+00:00"
    }
  }
]
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ],
        "x-fbn-apistatus": "Experimental"
      },
      "post": {
        "tags": [
          "Licences"
        ],
        "summary": "[EXPERIMENTAL] Create a Licence",
        "description": "Creates an unassigned Licence policy",
        "operationId": "CreateLicence",
        "requestBody": {
          "description": "The Licence definition",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LicenceCreationRequest"
              },
              "example": {
  "code": "dataset-licence-1",
  "description": "Access to licensed dataset",
  "applications": [
    "LUSID"
  ],
  "selectors": [
    {
      "code": "dataset-licence-1",
      "actionIds": [
        {
          "scope": "default",
          "activity": "Read",
          "entity": "Portfolio"
        }
      ]
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LicenceCreationRequest"
              },
              "example": {
  "code": "dataset-licence-1",
  "description": "Access to licensed dataset",
  "applications": [
    "LUSID"
  ],
  "selectors": [
    {
      "code": "dataset-licence-1",
      "actionIds": [
        {
          "scope": "default",
          "activity": "Read",
          "entity": "Portfolio"
        }
      ]
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LicenceCreationRequest"
              },
              "example": {
  "code": "dataset-licence-1",
  "description": "Access to licensed dataset",
  "applications": [
    "LUSID"
  ],
  "selectors": [
    {
      "code": "dataset-licence-1",
      "actionIds": [
        {
          "scope": "default",
          "activity": "Read",
          "entity": "Portfolio"
        }
      ]
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LicenceCreationRequest"
              },
              "example": {
  "code": "dataset-licence-1",
  "description": "Access to licensed dataset",
  "applications": [
    "LUSID"
  ],
  "selectors": [
    {
      "code": "dataset-licence-1",
      "actionIds": [
        {
          "scope": "default",
          "activity": "Read",
          "entity": "Portfolio"
        }
      ]
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Create a new Licence",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
  "id": {
    "scope": "FINBOURNE",
    "code": "dataset-licence-1"
  },
  "description": "Access to licensed dataset",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "FINBOURNE",
          "code": "dataset-licence-1"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          }
        ],
        "name": "access-dataset-1",
        "description": "Licence for dataset 1"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
  "id": {
    "scope": "FINBOURNE",
    "code": "dataset-licence-1"
  },
  "description": "Access to licensed dataset",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "FINBOURNE",
          "code": "dataset-licence-1"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          }
        ],
        "name": "access-dataset-1",
        "description": "Licence for dataset 1"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
  "id": {
    "scope": "FINBOURNE",
    "code": "dataset-licence-1"
  },
  "description": "Access to licensed dataset",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "FINBOURNE",
          "code": "dataset-licence-1"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          }
        ],
        "name": "access-dataset-1",
        "description": "Licence for dataset 1"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ],
        "x-fbn-apistatus": "Experimental"
      }
    },
    "/api/licences/{code}": {
      "get": {
        "tags": [
          "Licences"
        ],
        "summary": "[EXPERIMENTAL] Get Licence",
        "description": "Gets an identified Licence",
        "operationId": "GetLicence",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The code of the Licence",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The code of the Licence"
            }
          },
          {
            "name": "asAt",
            "in": "query",
            "description": "Optional. The AsAt date time of the data",
            "schema": {
              "type": "string",
              "description": "Optional. The AsAt date time of the data",
              "format": "date-time",
              "nullable": true
            },
            "x-nullable": true
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Optional. Will use the default client name if not provided. The scope of the Licence",
            "schema": {
              "type": "string",
              "description": "Optional. Will use the default client name if not provided. The scope of the Licence",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get a specific Licence",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
  "id": {
    "scope": "FINBOURNE",
    "code": "dataset-licence-1"
  },
  "description": "Access to licensed dataset",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "FINBOURNE",
          "code": "dataset-licence-1"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          }
        ],
        "name": "access-dataset-1",
        "description": "Licence for dataset 1"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
  "id": {
    "scope": "FINBOURNE",
    "code": "dataset-licence-1"
  },
  "description": "Access to licensed dataset",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "FINBOURNE",
          "code": "dataset-licence-1"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          }
        ],
        "name": "access-dataset-1",
        "description": "Licence for dataset 1"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
  "id": {
    "scope": "FINBOURNE",
    "code": "dataset-licence-1"
  },
  "description": "Access to licensed dataset",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "FINBOURNE",
          "code": "dataset-licence-1"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          }
        ],
        "name": "access-dataset-1",
        "description": "Licence for dataset 1"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ],
        "x-fbn-apistatus": "Experimental"
      },
      "delete": {
        "tags": [
          "Licences"
        ],
        "summary": "[EXPERIMENTAL] Delete Licence",
        "description": "Deletes an identified Licence",
        "operationId": "DeleteLicence",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The code of the Licence",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The code of the Licence"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Optional. Will use the client name if not provided. The scope of the Licence",
            "schema": {
              "type": "string",
              "description": "Optional. Will use the client name if not provided. The scope of the Licence",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ],
        "x-fbn-apistatus": "Experimental"
      },
      "put": {
        "tags": [
          "Licences"
        ],
        "summary": "[EXPERIMENTAL] Update Licence",
        "description": "Update an existing Licence policy",
        "operationId": "UpdateLicence",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The code of the Licence",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The code of the Licence"
            }
          }
        ],
        "requestBody": {
          "description": "The Licence definition",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/LicenceUpdateRequest"
              },
              "example": {
  "description": "Access to licensed dataset",
  "applications": [
    "LUSID"
  ],
  "selectors": [
    {
      "code": "dataset-licence-1",
      "actionIds": [
        {
          "scope": "default",
          "activity": "Read",
          "entity": "Portfolio"
        }
      ]
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LicenceUpdateRequest"
              },
              "example": {
  "description": "Access to licensed dataset",
  "applications": [
    "LUSID"
  ],
  "selectors": [
    {
      "code": "dataset-licence-1",
      "actionIds": [
        {
          "scope": "default",
          "activity": "Read",
          "entity": "Portfolio"
        }
      ]
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LicenceUpdateRequest"
              },
              "example": {
  "description": "Access to licensed dataset",
  "applications": [
    "LUSID"
  ],
  "selectors": [
    {
      "code": "dataset-licence-1",
      "actionIds": [
        {
          "scope": "default",
          "activity": "Read",
          "entity": "Portfolio"
        }
      ]
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LicenceUpdateRequest"
              },
              "example": {
  "description": "Access to licensed dataset",
  "applications": [
    "LUSID"
  ],
  "selectors": [
    {
      "code": "dataset-licence-1",
      "actionIds": [
        {
          "scope": "default",
          "activity": "Read",
          "entity": "Portfolio"
        }
      ]
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Update a specific Licence",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
  "id": {
    "scope": "FINBOURNE",
    "code": "dataset-licence-1"
  },
  "description": "Access to licensed dataset",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "FINBOURNE",
          "code": "dataset-licence-1"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          }
        ],
        "name": "access-dataset-1",
        "description": "Licence for dataset 1"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
  "id": {
    "scope": "FINBOURNE",
    "code": "dataset-licence-1"
  },
  "description": "Access to licensed dataset",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "FINBOURNE",
          "code": "dataset-licence-1"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          }
        ],
        "name": "access-dataset-1",
        "description": "Licence for dataset 1"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
  "id": {
    "scope": "FINBOURNE",
    "code": "dataset-licence-1"
  },
  "description": "Access to licensed dataset",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "FINBOURNE",
          "code": "dataset-licence-1"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          }
        ],
        "name": "access-dataset-1",
        "description": "Licence for dataset 1"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ],
        "x-fbn-apistatus": "Experimental"
      }
    },
    "/api/licences/{code}/assignments": {
      "get": {
        "tags": [
          "Licences"
        ],
        "summary": "[EXPERIMENTAL] List Assignments",
        "description": "List tenants the specified Licence is assigned to",
        "operationId": "ListAssignments",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Code of the Licence",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Code of the Licence",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get the list of tenants assigned to a licence",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "example": [
  "FINBOURNE"
]
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "example": [
  "FINBOURNE"
]
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "example": [
  "FINBOURNE"
]
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ],
        "x-fbn-apistatus": "Experimental"
      }
    },
    "/api/licences/{code}/assignments/{tenant}": {
      "put": {
        "tags": [
          "Licences"
        ],
        "summary": "[EXPERIMENTAL] Assign Licence",
        "description": "Create a licence assignment to another, authorised, tenant",
        "operationId": "CreateLicenceAssignment",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Code of the Licence",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Code of the Licence"
            }
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Name of the tenant to be shared with",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the tenant to be shared with"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Assign a Licence to a tenant",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
  "id": {
    "scope": "FINBOURNE",
    "code": "dataset-licence-1"
  },
  "description": "Access to licensed dataset",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "FINBOURNE",
          "code": "dataset-licence-1"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          }
        ],
        "name": "access-dataset-1",
        "description": "Licence for dataset 1"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
  "id": {
    "scope": "FINBOURNE",
    "code": "dataset-licence-1"
  },
  "description": "Access to licensed dataset",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "FINBOURNE",
          "code": "dataset-licence-1"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          }
        ],
        "name": "access-dataset-1",
        "description": "Licence for dataset 1"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
  "id": {
    "scope": "FINBOURNE",
    "code": "dataset-licence-1"
  },
  "description": "Access to licensed dataset",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "FINBOURNE",
          "code": "dataset-licence-1"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          }
        ],
        "name": "access-dataset-1",
        "description": "Licence for dataset 1"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ],
        "x-fbn-apistatus": "Experimental"
      },
      "delete": {
        "tags": [
          "Licences"
        ],
        "summary": "[EXPERIMENTAL] Unassign Licence",
        "description": "Remove a Licence assignment from a tenant",
        "operationId": "DeleteLicenceAssignment",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Code of the Licence",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Code of the Licence"
            }
          },
          {
            "name": "tenant",
            "in": "path",
            "description": "Name of the tenant to be shared with",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Name of the tenant to be shared with"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ],
        "x-fbn-apistatus": "Experimental"
      }
    },
    "/api/me": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "Get policies of requesting user",
        "description": "Gets all Policies for the current user",
        "operationId": "GetOwnPolicies",
        "parameters": [
          {
            "name": "applications",
            "in": "query",
            "description": "Optional. Filter on the applications that the policies apply to",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Optional. Filter on the applications that the policies apply to",
              "nullable": true
            },
            "x-nullable": true
          },
          {
            "name": "asAt",
            "in": "query",
            "description": "Optional. The AsAt date time of the data",
            "schema": {
              "type": "string",
              "description": "Optional. The AsAt date time of the data",
              "format": "date-time",
              "nullable": true
            },
            "x-nullable": true
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Optional. Order the results by these fields. Use use the '-' sign to denote descending order e.g. -MyFieldName",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Optional. Order the results by these fields. Use use the '-' sign to denote descending order e.g. -MyFieldName",
              "nullable": true
            },
            "x-nullable": true
          },
          {
            "name": "start",
            "in": "query",
            "description": "Optional. When paginating, skip this number of results",
            "schema": {
              "type": "integer",
              "description": "Optional. When paginating, skip this number of results",
              "format": "int32",
              "nullable": true
            },
            "x-nullable": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Optional. When paginating, limit the number of returned results to this many.",
            "schema": {
              "type": "integer",
              "description": "Optional. When paginating, limit the number of returned results to this many.",
              "format": "int32",
              "nullable": true
            },
            "x-nullable": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Optional. Expression to filter the result set",
            "schema": {
              "type": "string",
              "description": "Optional. Expression to filter the result set",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get policies and licences of current user",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttachedPolicyDefinitionResponse"
                  }
                },
                "example": [
  {
    "sourceRole": {
      "scope": "default",
      "code": "example-source-role"
    },
    "roleHierarchyIndex": 50,
    "description": "Example policy demonstrating the granting of access to some resources",
    "applications": [
      "LUSID"
    ],
    "policyType": "Entitlement",
    "id": {
      "scope": "default",
      "code": "official-portfolios-read-only"
    },
    "grant": "Allow",
    "selectors": [
      {
        "idSelectorDefinition": {
          "identifier": {
            "scope": "official"
          },
          "actions": [
            {
              "scope": "default",
              "activity": "Read",
              "entity": "Portfolio"
            },
            {
              "scope": "default",
              "activity": "Aggregate",
              "entity": "Portfolio"
            }
          ],
          "name": "access-official-scope",
          "description": "Allow readonly access to the 'official' scope"
        }
      }
    ],
    "for": [
      {
        "effectiveRange": {
          "from": "2015-12-25T00:00:00.0000000+00:00",
          "to": "2020-12-25T00:00:00.0000000+00:00"
        }
      },
      {
        "asAtRangeForSpec": {
          "from": {
            "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
          },
          "to": {
            "value": "AsAt=Latest"
          }
        }
      }
    ],
    "if": [
      {
        "ifRequestHeaderExpression": {
          "headerName": "organisation.specific.group.header",
          "operator": "EqualsCaseInsensitive",
          "value": "special-group"
        }
      }
    ],
    "when": {
      "activate": "2016-08-31T18:00:00.0000000+00:00",
      "deactivate": "2020-08-31T18:00:00.0000000+00:00"
    }
  }
]
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttachedPolicyDefinitionResponse"
                  }
                },
                "example": [
  {
    "sourceRole": {
      "scope": "default",
      "code": "example-source-role"
    },
    "roleHierarchyIndex": 50,
    "description": "Example policy demonstrating the granting of access to some resources",
    "applications": [
      "LUSID"
    ],
    "policyType": "Entitlement",
    "id": {
      "scope": "default",
      "code": "official-portfolios-read-only"
    },
    "grant": "Allow",
    "selectors": [
      {
        "idSelectorDefinition": {
          "identifier": {
            "scope": "official"
          },
          "actions": [
            {
              "scope": "default",
              "activity": "Read",
              "entity": "Portfolio"
            },
            {
              "scope": "default",
              "activity": "Aggregate",
              "entity": "Portfolio"
            }
          ],
          "name": "access-official-scope",
          "description": "Allow readonly access to the 'official' scope"
        }
      }
    ],
    "for": [
      {
        "effectiveRange": {
          "from": "2015-12-25T00:00:00.0000000+00:00",
          "to": "2020-12-25T00:00:00.0000000+00:00"
        }
      },
      {
        "asAtRangeForSpec": {
          "from": {
            "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
          },
          "to": {
            "value": "AsAt=Latest"
          }
        }
      }
    ],
    "if": [
      {
        "ifRequestHeaderExpression": {
          "headerName": "organisation.specific.group.header",
          "operator": "EqualsCaseInsensitive",
          "value": "special-group"
        }
      }
    ],
    "when": {
      "activate": "2016-08-31T18:00:00.0000000+00:00",
      "deactivate": "2020-08-31T18:00:00.0000000+00:00"
    }
  }
]
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttachedPolicyDefinitionResponse"
                  }
                },
                "example": [
  {
    "sourceRole": {
      "scope": "default",
      "code": "example-source-role"
    },
    "roleHierarchyIndex": 50,
    "description": "Example policy demonstrating the granting of access to some resources",
    "applications": [
      "LUSID"
    ],
    "policyType": "Entitlement",
    "id": {
      "scope": "default",
      "code": "official-portfolios-read-only"
    },
    "grant": "Allow",
    "selectors": [
      {
        "idSelectorDefinition": {
          "identifier": {
            "scope": "official"
          },
          "actions": [
            {
              "scope": "default",
              "activity": "Read",
              "entity": "Portfolio"
            },
            {
              "scope": "default",
              "activity": "Aggregate",
              "entity": "Portfolio"
            }
          ],
          "name": "access-official-scope",
          "description": "Allow readonly access to the 'official' scope"
        }
      }
    ],
    "for": [
      {
        "effectiveRange": {
          "from": "2015-12-25T00:00:00.0000000+00:00",
          "to": "2020-12-25T00:00:00.0000000+00:00"
        }
      },
      {
        "asAtRangeForSpec": {
          "from": {
            "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
          },
          "to": {
            "value": "AsAt=Latest"
          }
        }
      }
    ],
    "if": [
      {
        "ifRequestHeaderExpression": {
          "headerName": "organisation.specific.group.header",
          "operator": "EqualsCaseInsensitive",
          "value": "special-group"
        }
      }
    ],
    "when": {
      "activate": "2016-08-31T18:00:00.0000000+00:00",
      "deactivate": "2020-08-31T18:00:00.0000000+00:00"
    }
  }
]
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ],
        "x-fbn-apistatus": "Stable"
      },
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "[EARLY ACCESS] Run one or more evaluations",
        "description": "Given a dictionary of evaluation requests (keyed by any arbitrary correlation identifier), each will be evaluated according to the current user's policies (deduced from the provided OAuth token).",
        "operationId": "Evaluate",
        "parameters": [
          {
            "name": "applications",
            "in": "query",
            "description": "Optional. The application type of the roles and policies to use when evaluating.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Optional. The application type of the roles and policies to use when evaluating.",
              "nullable": true
            },
            "x-nullable": true
          },
          {
            "name": "asAt",
            "in": "query",
            "description": "Optional. The requested AsAt date of the entitlements",
            "schema": {
              "type": "string",
              "description": "Optional. The requested AsAt date of the entitlements",
              "format": "date-time",
              "nullable": true
            },
            "x-nullable": true
          }
        ],
        "requestBody": {
          "description": "A dictionary of evaluations, keyed using any arbitrary correlation id (it will be returned with the response for that evaluation).",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/EvaluationRequest"
                },
                "description": "A dictionary of evaluations, keyed using any arbitrary correlation id (it will be returned with the response for that evaluation)."
              },
              "example": {
  "data-access-page-evalation": {
    "request": {
      "action": {
        "entityCode": "WebSitePage",
        "scope": "FINBOURNE",
        "activity": "SeeAdminControls"
      },
      "toEffectiveDate": "2018-12-08T13:30:00.0000000+00:00",
      "toAsAt": "2018-12-31T11:00:00.0000000+00:00"
    },
    "resource": {
      "id": {
        "scope": "FINBOURNE",
        "code": "DataAccessPage"
      },
      "metadata": {
        "requiredLicence": [
          {
            "provider": "WebsiteAccess",
            "value": "FINBOURNE"
          }
        ]
      }
    }
  }
}
            },
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/EvaluationRequest"
                },
                "description": "A dictionary of evaluations, keyed using any arbitrary correlation id (it will be returned with the response for that evaluation)."
              },
              "example": {
  "data-access-page-evalation": {
    "request": {
      "action": {
        "entityCode": "WebSitePage",
        "scope": "FINBOURNE",
        "activity": "SeeAdminControls"
      },
      "toEffectiveDate": "2018-12-08T13:30:00.0000000+00:00",
      "toAsAt": "2018-12-31T11:00:00.0000000+00:00"
    },
    "resource": {
      "id": {
        "scope": "FINBOURNE",
        "code": "DataAccessPage"
      },
      "metadata": {
        "requiredLicence": [
          {
            "provider": "WebsiteAccess",
            "value": "FINBOURNE"
          }
        ]
      }
    }
  }
}
            },
            "text/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/EvaluationRequest"
                },
                "description": "A dictionary of evaluations, keyed using any arbitrary correlation id (it will be returned with the response for that evaluation)."
              },
              "example": {
  "data-access-page-evalation": {
    "request": {
      "action": {
        "entityCode": "WebSitePage",
        "scope": "FINBOURNE",
        "activity": "SeeAdminControls"
      },
      "toEffectiveDate": "2018-12-08T13:30:00.0000000+00:00",
      "toAsAt": "2018-12-31T11:00:00.0000000+00:00"
    },
    "resource": {
      "id": {
        "scope": "FINBOURNE",
        "code": "DataAccessPage"
      },
      "metadata": {
        "requiredLicence": [
          {
            "provider": "WebsiteAccess",
            "value": "FINBOURNE"
          }
        ]
      }
    }
  }
}
            },
            "application/*+json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/EvaluationRequest"
                },
                "description": "A dictionary of evaluations, keyed using any arbitrary correlation id (it will be returned with the response for that evaluation)."
              },
              "example": {
  "data-access-page-evalation": {
    "request": {
      "action": {
        "entityCode": "WebSitePage",
        "scope": "FINBOURNE",
        "activity": "SeeAdminControls"
      },
      "toEffectiveDate": "2018-12-08T13:30:00.0000000+00:00",
      "toAsAt": "2018-12-31T11:00:00.0000000+00:00"
    },
    "resource": {
      "id": {
        "scope": "FINBOURNE",
        "code": "DataAccessPage"
      },
      "metadata": {
        "requiredLicence": [
          {
            "provider": "WebsiteAccess",
            "value": "FINBOURNE"
          }
        ]
      }
    }
  }
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Run an evaluation against the current user's entitlements",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/EvaluationResponse"
                  }
                },
                "example": {
  "data-acces-page-evaluation": {
    "result": "DeniedAsLicenceRequired",
    "detailedMessage": "Access was denied because user is missing licence 'A/B'"
  }
}
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/EvaluationResponse"
                  }
                },
                "example": {
  "data-acces-page-evaluation": {
    "result": "DeniedAsLicenceRequired",
    "detailedMessage": "Access was denied because user is missing licence 'A/B'"
  }
}
              },
              "text/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/EvaluationResponse"
                  }
                },
                "example": {
  "data-acces-page-evaluation": {
    "result": "DeniedAsLicenceRequired",
    "detailedMessage": "Access was denied because user is missing licence 'A/B'"
  }
}
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/metadata/access/resources": {
      "get": {
        "tags": [
          "Application Metadata"
        ],
        "summary": "[EARLY ACCESS] Get resources available for access control",
        "description": "Get the comprehensive set of resources that are available for access control",
        "operationId": "ListAccessControlledResources",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListOfAccessControlledResource"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListOfAccessControlledResource"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceListOfAccessControlledResource"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/policies": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "[EARLY ACCESS] List Policies",
        "description": "Gets all Policies in a scope",
        "operationId": "ListPolicies",
        "parameters": [
          {
            "name": "scope",
            "in": "query",
            "description": "Optional. Will use the default scope if not provided. The requested scope",
            "schema": {
              "type": "string",
              "description": "Optional. Will use the default scope if not provided. The requested scope",
              "nullable": true
            }
          },
          {
            "name": "asAt",
            "in": "query",
            "description": "Optional. The AsAt date time of the data",
            "schema": {
              "type": "string",
              "description": "Optional. The AsAt date time of the data",
              "format": "date-time",
              "nullable": true
            },
            "x-nullable": true
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Optional. Order the results by these fields. Use use the '-' sign to denote descending order e.g. -MyFieldName",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Optional. Order the results by these fields. Use use the '-' sign to denote descending order e.g. -MyFieldName",
              "nullable": true
            },
            "x-nullable": true
          },
          {
            "name": "start",
            "in": "query",
            "description": "Optional. When paginating, skip this number of results",
            "schema": {
              "type": "integer",
              "description": "Optional. When paginating, skip this number of results",
              "format": "int32",
              "nullable": true
            },
            "x-nullable": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Optional. When paginating, limit the number of returned results to this many.",
            "schema": {
              "type": "integer",
              "description": "Optional. When paginating, limit the number of returned results to this many.",
              "format": "int32",
              "nullable": true
            },
            "x-nullable": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Optional. Expression to filter the result set",
            "schema": {
              "type": "string",
              "description": "Optional. Expression to filter the result set",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Policies",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyResponse"
                  }
                },
                "example": [
  {
    "id": {
      "scope": "default",
      "code": "official-portfolios-read-only"
    },
    "description": "Example policy demonstrating the granting of access to some resources",
    "applications": [
      "LUSID"
    ],
    "grant": "Allow",
    "selectors": [
      {
        "idSelectorDefinition": {
          "identifier": {
            "scope": "official"
          },
          "actions": [
            {
              "scope": "default",
              "activity": "Read",
              "entity": "Portfolio"
            },
            {
              "scope": "default",
              "activity": "Aggregate",
              "entity": "Portfolio"
            }
          ],
          "name": "access-official-scope",
          "description": "Allow readonly access to the 'official' scope"
        }
      }
    ],
    "for": [
      {
        "effectiveRange": {
          "from": "2015-12-25T00:00:00.0000000+00:00",
          "to": "2020-12-25T00:00:00.0000000+00:00"
        }
      },
      {
        "asAtRangeForSpec": {
          "from": {
            "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
          },
          "to": {
            "value": "AsAt=Latest"
          }
        }
      }
    ],
    "if": [
      {
        "ifRequestHeaderExpression": {
          "headerName": "organisation.specific.group.header",
          "operator": "EqualsCaseInsensitive",
          "value": "special-group"
        }
      }
    ],
    "when": {
      "activate": "2016-08-31T18:00:00.0000000+00:00",
      "deactivate": "2020-08-31T18:00:00.0000000+00:00"
    }
  }
]
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyResponse"
                  }
                },
                "example": [
  {
    "id": {
      "scope": "default",
      "code": "official-portfolios-read-only"
    },
    "description": "Example policy demonstrating the granting of access to some resources",
    "applications": [
      "LUSID"
    ],
    "grant": "Allow",
    "selectors": [
      {
        "idSelectorDefinition": {
          "identifier": {
            "scope": "official"
          },
          "actions": [
            {
              "scope": "default",
              "activity": "Read",
              "entity": "Portfolio"
            },
            {
              "scope": "default",
              "activity": "Aggregate",
              "entity": "Portfolio"
            }
          ],
          "name": "access-official-scope",
          "description": "Allow readonly access to the 'official' scope"
        }
      }
    ],
    "for": [
      {
        "effectiveRange": {
          "from": "2015-12-25T00:00:00.0000000+00:00",
          "to": "2020-12-25T00:00:00.0000000+00:00"
        }
      },
      {
        "asAtRangeForSpec": {
          "from": {
            "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
          },
          "to": {
            "value": "AsAt=Latest"
          }
        }
      }
    ],
    "if": [
      {
        "ifRequestHeaderExpression": {
          "headerName": "organisation.specific.group.header",
          "operator": "EqualsCaseInsensitive",
          "value": "special-group"
        }
      }
    ],
    "when": {
      "activate": "2016-08-31T18:00:00.0000000+00:00",
      "deactivate": "2020-08-31T18:00:00.0000000+00:00"
    }
  }
]
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyResponse"
                  }
                },
                "example": [
  {
    "id": {
      "scope": "default",
      "code": "official-portfolios-read-only"
    },
    "description": "Example policy demonstrating the granting of access to some resources",
    "applications": [
      "LUSID"
    ],
    "grant": "Allow",
    "selectors": [
      {
        "idSelectorDefinition": {
          "identifier": {
            "scope": "official"
          },
          "actions": [
            {
              "scope": "default",
              "activity": "Read",
              "entity": "Portfolio"
            },
            {
              "scope": "default",
              "activity": "Aggregate",
              "entity": "Portfolio"
            }
          ],
          "name": "access-official-scope",
          "description": "Allow readonly access to the 'official' scope"
        }
      }
    ],
    "for": [
      {
        "effectiveRange": {
          "from": "2015-12-25T00:00:00.0000000+00:00",
          "to": "2020-12-25T00:00:00.0000000+00:00"
        }
      },
      {
        "asAtRangeForSpec": {
          "from": {
            "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
          },
          "to": {
            "value": "AsAt=Latest"
          }
        }
      }
    ],
    "if": [
      {
        "ifRequestHeaderExpression": {
          "headerName": "organisation.specific.group.header",
          "operator": "EqualsCaseInsensitive",
          "value": "special-group"
        }
      }
    ],
    "when": {
      "activate": "2016-08-31T18:00:00.0000000+00:00",
      "deactivate": "2020-08-31T18:00:00.0000000+00:00"
    }
  }
]
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      },
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "[EARLY ACCESS] Create Policy",
        "description": "Creates a Policy",
        "operationId": "CreatePolicy",
        "requestBody": {
          "description": "The definition of the Policy",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCreationRequest"
              },
              "example": {
  "code": "example-policy",
  "description": "Example policy demonstrating their creation",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "official"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          },
          {
            "scope": "default",
            "activity": "Aggregate",
            "entity": "Portfolio"
          }
        ],
        "name": "access-official-scope",
        "description": "Allow readonly access to the 'official' scope"
      }
    }
  ],
  "for": [
    {
      "effectiveRange": {
        "from": "2015-12-25T00:00:00.0000000+00:00",
        "to": "2020-12-25T00:00:00.0000000+00:00"
      }
    },
    {
      "asAtRangeForSpec": {
        "from": {
          "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
        },
        "to": {
          "value": "AsAt=Latest"
        }
      }
    }
  ],
  "if": [
    {
      "ifRequestHeaderExpression": {
        "headerName": "organisation.specific.group.header",
        "operator": "EqualsCaseInsensitive",
        "value": "special-group"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCreationRequest"
              },
              "example": {
  "code": "example-policy",
  "description": "Example policy demonstrating their creation",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "official"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          },
          {
            "scope": "default",
            "activity": "Aggregate",
            "entity": "Portfolio"
          }
        ],
        "name": "access-official-scope",
        "description": "Allow readonly access to the 'official' scope"
      }
    }
  ],
  "for": [
    {
      "effectiveRange": {
        "from": "2015-12-25T00:00:00.0000000+00:00",
        "to": "2020-12-25T00:00:00.0000000+00:00"
      }
    },
    {
      "asAtRangeForSpec": {
        "from": {
          "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
        },
        "to": {
          "value": "AsAt=Latest"
        }
      }
    }
  ],
  "if": [
    {
      "ifRequestHeaderExpression": {
        "headerName": "organisation.specific.group.header",
        "operator": "EqualsCaseInsensitive",
        "value": "special-group"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCreationRequest"
              },
              "example": {
  "code": "example-policy",
  "description": "Example policy demonstrating their creation",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "official"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          },
          {
            "scope": "default",
            "activity": "Aggregate",
            "entity": "Portfolio"
          }
        ],
        "name": "access-official-scope",
        "description": "Allow readonly access to the 'official' scope"
      }
    }
  ],
  "for": [
    {
      "effectiveRange": {
        "from": "2015-12-25T00:00:00.0000000+00:00",
        "to": "2020-12-25T00:00:00.0000000+00:00"
      }
    },
    {
      "asAtRangeForSpec": {
        "from": {
          "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
        },
        "to": {
          "value": "AsAt=Latest"
        }
      }
    }
  ],
  "if": [
    {
      "ifRequestHeaderExpression": {
        "headerName": "organisation.specific.group.header",
        "operator": "EqualsCaseInsensitive",
        "value": "special-group"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCreationRequest"
              },
              "example": {
  "code": "example-policy",
  "description": "Example policy demonstrating their creation",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "official"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          },
          {
            "scope": "default",
            "activity": "Aggregate",
            "entity": "Portfolio"
          }
        ],
        "name": "access-official-scope",
        "description": "Allow readonly access to the 'official' scope"
      }
    }
  ],
  "for": [
    {
      "effectiveRange": {
        "from": "2015-12-25T00:00:00.0000000+00:00",
        "to": "2020-12-25T00:00:00.0000000+00:00"
      }
    },
    {
      "asAtRangeForSpec": {
        "from": {
          "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
        },
        "to": {
          "value": "AsAt=Latest"
        }
      }
    }
  ],
  "if": [
    {
      "ifRequestHeaderExpression": {
        "headerName": "organisation.specific.group.header",
        "operator": "EqualsCaseInsensitive",
        "value": "special-group"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created policy",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
  "id": {
    "scope": "FINBOURNE",
    "code": "dataset-licence-1"
  },
  "description": "Access to licensed dataset",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "FINBOURNE",
          "code": "dataset-licence-1"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          }
        ],
        "name": "access-dataset-1",
        "description": "Licence for dataset 1"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
  "id": {
    "scope": "FINBOURNE",
    "code": "dataset-licence-1"
  },
  "description": "Access to licensed dataset",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "FINBOURNE",
          "code": "dataset-licence-1"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          }
        ],
        "name": "access-dataset-1",
        "description": "Licence for dataset 1"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
  "id": {
    "scope": "FINBOURNE",
    "code": "dataset-licence-1"
  },
  "description": "Access to licensed dataset",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "FINBOURNE",
          "code": "dataset-licence-1"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          }
        ],
        "name": "access-dataset-1",
        "description": "Licence for dataset 1"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/policies/{code}": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "[EARLY ACCESS] Get Policy",
        "description": "Gets an identified Policy",
        "operationId": "GetPolicy",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The code of the Policy",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The code of the Policy"
            }
          },
          {
            "name": "asAt",
            "in": "query",
            "description": "Optional. The AsAt date time of the data",
            "schema": {
              "type": "string",
              "description": "Optional. The AsAt date time of the data",
              "format": "date-time",
              "nullable": true
            },
            "x-nullable": true
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Optional. Will use the default scope if not provided. The scope of the Policy",
            "schema": {
              "type": "string",
              "description": "Optional. Will use the default scope if not provided. The scope of the Policy",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get a specific Policy",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "official-portfolios-read-only"
  },
  "description": "Example policy demonstrating the granting of access to some resources",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "official"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          },
          {
            "scope": "default",
            "activity": "Aggregate",
            "entity": "Portfolio"
          }
        ],
        "name": "access-official-scope",
        "description": "Allow readonly access to the 'official' scope"
      }
    }
  ],
  "for": [
    {
      "effectiveRange": {
        "from": "2015-12-25T00:00:00.0000000+00:00",
        "to": "2020-12-25T00:00:00.0000000+00:00"
      }
    },
    {
      "asAtRangeForSpec": {
        "from": {
          "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
        },
        "to": {
          "value": "AsAt=Latest"
        }
      }
    }
  ],
  "if": [
    {
      "ifRequestHeaderExpression": {
        "headerName": "organisation.specific.group.header",
        "operator": "EqualsCaseInsensitive",
        "value": "special-group"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "official-portfolios-read-only"
  },
  "description": "Example policy demonstrating the granting of access to some resources",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "official"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          },
          {
            "scope": "default",
            "activity": "Aggregate",
            "entity": "Portfolio"
          }
        ],
        "name": "access-official-scope",
        "description": "Allow readonly access to the 'official' scope"
      }
    }
  ],
  "for": [
    {
      "effectiveRange": {
        "from": "2015-12-25T00:00:00.0000000+00:00",
        "to": "2020-12-25T00:00:00.0000000+00:00"
      }
    },
    {
      "asAtRangeForSpec": {
        "from": {
          "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
        },
        "to": {
          "value": "AsAt=Latest"
        }
      }
    }
  ],
  "if": [
    {
      "ifRequestHeaderExpression": {
        "headerName": "organisation.specific.group.header",
        "operator": "EqualsCaseInsensitive",
        "value": "special-group"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "official-portfolios-read-only"
  },
  "description": "Example policy demonstrating the granting of access to some resources",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "official"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          },
          {
            "scope": "default",
            "activity": "Aggregate",
            "entity": "Portfolio"
          }
        ],
        "name": "access-official-scope",
        "description": "Allow readonly access to the 'official' scope"
      }
    }
  ],
  "for": [
    {
      "effectiveRange": {
        "from": "2015-12-25T00:00:00.0000000+00:00",
        "to": "2020-12-25T00:00:00.0000000+00:00"
      }
    },
    {
      "asAtRangeForSpec": {
        "from": {
          "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
        },
        "to": {
          "value": "AsAt=Latest"
        }
      }
    }
  ],
  "if": [
    {
      "ifRequestHeaderExpression": {
        "headerName": "organisation.specific.group.header",
        "operator": "EqualsCaseInsensitive",
        "value": "special-group"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      },
      "delete": {
        "tags": [
          "Policies"
        ],
        "summary": "[EARLY ACCESS] Delete Policy",
        "description": "Deletes an identified Policy",
        "operationId": "DeletePolicy",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The code of the Policy",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The code of the Policy"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Optional. Will use the default scope if not provided. The scope of the Policy",
            "schema": {
              "type": "string",
              "description": "Optional. Will use the default scope if not provided. The scope of the Policy",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      },
      "put": {
        "tags": [
          "Policies"
        ],
        "summary": "[EARLY ACCESS] Update Policy",
        "description": "Updates a Policy",
        "operationId": "UpdatePolicy",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The code of the Policy",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The code of the Policy"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Optional. Will use the default scope if not provided. The scope of the Policy",
            "schema": {
              "type": "string",
              "description": "Optional. Will use the default scope if not provided. The scope of the Policy",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "The updated definition of the Policy",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyUpdateRequest"
              },
              "example": {
  "description": "Example policy demonstrating their update",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "official"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          },
          {
            "scope": "default",
            "activity": "Aggregate",
            "entity": "Portfolio"
          }
        ],
        "name": "access-official-scope",
        "description": "Allow readonly access to the 'official' scope"
      }
    }
  ],
  "for": [
    {
      "effectiveRange": {
        "from": "2015-12-25T00:00:00.0000000+00:00",
        "to": "2020-12-25T00:00:00.0000000+00:00"
      }
    },
    {
      "asAtRangeForSpec": {
        "from": {
          "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
        },
        "to": {
          "value": "AsAt=Latest"
        }
      }
    }
  ],
  "if": [
    {
      "ifRequestHeaderExpression": {
        "headerName": "organisation.specific.group.header",
        "operator": "EqualsCaseInsensitive",
        "value": "special-group"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyUpdateRequest"
              },
              "example": {
  "description": "Example policy demonstrating their update",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "official"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          },
          {
            "scope": "default",
            "activity": "Aggregate",
            "entity": "Portfolio"
          }
        ],
        "name": "access-official-scope",
        "description": "Allow readonly access to the 'official' scope"
      }
    }
  ],
  "for": [
    {
      "effectiveRange": {
        "from": "2015-12-25T00:00:00.0000000+00:00",
        "to": "2020-12-25T00:00:00.0000000+00:00"
      }
    },
    {
      "asAtRangeForSpec": {
        "from": {
          "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
        },
        "to": {
          "value": "AsAt=Latest"
        }
      }
    }
  ],
  "if": [
    {
      "ifRequestHeaderExpression": {
        "headerName": "organisation.specific.group.header",
        "operator": "EqualsCaseInsensitive",
        "value": "special-group"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyUpdateRequest"
              },
              "example": {
  "description": "Example policy demonstrating their update",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "official"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          },
          {
            "scope": "default",
            "activity": "Aggregate",
            "entity": "Portfolio"
          }
        ],
        "name": "access-official-scope",
        "description": "Allow readonly access to the 'official' scope"
      }
    }
  ],
  "for": [
    {
      "effectiveRange": {
        "from": "2015-12-25T00:00:00.0000000+00:00",
        "to": "2020-12-25T00:00:00.0000000+00:00"
      }
    },
    {
      "asAtRangeForSpec": {
        "from": {
          "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
        },
        "to": {
          "value": "AsAt=Latest"
        }
      }
    }
  ],
  "if": [
    {
      "ifRequestHeaderExpression": {
        "headerName": "organisation.specific.group.header",
        "operator": "EqualsCaseInsensitive",
        "value": "special-group"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyUpdateRequest"
              },
              "example": {
  "description": "Example policy demonstrating their update",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "official"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          },
          {
            "scope": "default",
            "activity": "Aggregate",
            "entity": "Portfolio"
          }
        ],
        "name": "access-official-scope",
        "description": "Allow readonly access to the 'official' scope"
      }
    }
  ],
  "for": [
    {
      "effectiveRange": {
        "from": "2015-12-25T00:00:00.0000000+00:00",
        "to": "2020-12-25T00:00:00.0000000+00:00"
      }
    },
    {
      "asAtRangeForSpec": {
        "from": {
          "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
        },
        "to": {
          "value": "AsAt=Latest"
        }
      }
    }
  ],
  "if": [
    {
      "ifRequestHeaderExpression": {
        "headerName": "organisation.specific.group.header",
        "operator": "EqualsCaseInsensitive",
        "value": "special-group"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated policy",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "official-portfolios-read-only"
  },
  "description": "Example policy demonstrating the granting of access to some resources",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "official"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          },
          {
            "scope": "default",
            "activity": "Aggregate",
            "entity": "Portfolio"
          }
        ],
        "name": "access-official-scope",
        "description": "Allow readonly access to the 'official' scope"
      }
    }
  ],
  "for": [
    {
      "effectiveRange": {
        "from": "2015-12-25T00:00:00.0000000+00:00",
        "to": "2020-12-25T00:00:00.0000000+00:00"
      }
    },
    {
      "asAtRangeForSpec": {
        "from": {
          "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
        },
        "to": {
          "value": "AsAt=Latest"
        }
      }
    }
  ],
  "if": [
    {
      "ifRequestHeaderExpression": {
        "headerName": "organisation.specific.group.header",
        "operator": "EqualsCaseInsensitive",
        "value": "special-group"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "official-portfolios-read-only"
  },
  "description": "Example policy demonstrating the granting of access to some resources",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "official"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          },
          {
            "scope": "default",
            "activity": "Aggregate",
            "entity": "Portfolio"
          }
        ],
        "name": "access-official-scope",
        "description": "Allow readonly access to the 'official' scope"
      }
    }
  ],
  "for": [
    {
      "effectiveRange": {
        "from": "2015-12-25T00:00:00.0000000+00:00",
        "to": "2020-12-25T00:00:00.0000000+00:00"
      }
    },
    {
      "asAtRangeForSpec": {
        "from": {
          "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
        },
        "to": {
          "value": "AsAt=Latest"
        }
      }
    }
  ],
  "if": [
    {
      "ifRequestHeaderExpression": {
        "headerName": "organisation.specific.group.header",
        "operator": "EqualsCaseInsensitive",
        "value": "special-group"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "official-portfolios-read-only"
  },
  "description": "Example policy demonstrating the granting of access to some resources",
  "applications": [
    "LUSID"
  ],
  "grant": "Allow",
  "selectors": [
    {
      "idSelectorDefinition": {
        "identifier": {
          "scope": "official"
        },
        "actions": [
          {
            "scope": "default",
            "activity": "Read",
            "entity": "Portfolio"
          },
          {
            "scope": "default",
            "activity": "Aggregate",
            "entity": "Portfolio"
          }
        ],
        "name": "access-official-scope",
        "description": "Allow readonly access to the 'official' scope"
      }
    }
  ],
  "for": [
    {
      "effectiveRange": {
        "from": "2015-12-25T00:00:00.0000000+00:00",
        "to": "2020-12-25T00:00:00.0000000+00:00"
      }
    },
    {
      "asAtRangeForSpec": {
        "from": {
          "dateTimeOffset": "2018-01-01T00:00:00.0000000+00:00"
        },
        "to": {
          "value": "AsAt=Latest"
        }
      }
    }
  ],
  "if": [
    {
      "ifRequestHeaderExpression": {
        "headerName": "organisation.specific.group.header",
        "operator": "EqualsCaseInsensitive",
        "value": "special-group"
      }
    }
  ],
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/policycollections": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "[EARLY ACCESS] List PolicyCollections",
        "description": "Gets all PolicyCollections in a scope",
        "operationId": "ListPolicyCollections",
        "parameters": [
          {
            "name": "scope",
            "in": "query",
            "description": "Optional. Will use the default scope if not provided. The requested scope",
            "schema": {
              "type": "string",
              "description": "Optional. Will use the default scope if not provided. The requested scope",
              "nullable": true
            }
          },
          {
            "name": "asAt",
            "in": "query",
            "description": "Optional. The AsAt date time of the data",
            "schema": {
              "type": "string",
              "description": "Optional. The AsAt date time of the data",
              "format": "date-time",
              "nullable": true
            },
            "x-nullable": true
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Optional. Order the results by these fields. Use use the '-' sign to denote descending order e.g. -MyFieldName",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Optional. Order the results by these fields. Use use the '-' sign to denote descending order e.g. -MyFieldName",
              "nullable": true
            },
            "x-nullable": true
          },
          {
            "name": "start",
            "in": "query",
            "description": "Optional. When paginating, skip this number of results",
            "schema": {
              "type": "integer",
              "description": "Optional. When paginating, skip this number of results",
              "format": "int32",
              "nullable": true
            },
            "x-nullable": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Optional. When paginating, limit the number of returned results to this many.",
            "schema": {
              "type": "integer",
              "description": "Optional. When paginating, limit the number of returned results to this many.",
              "format": "int32",
              "nullable": true
            },
            "x-nullable": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Optional. Expression to filter the result set",
            "schema": {
              "type": "string",
              "description": "Optional. Expression to filter the result set",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested list of PolicyCollections",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyCollectionResponse"
                  }
                },
                "example": [
  {
    "id": {
      "scope": "default",
      "code": "organisation-wide-policies"
    },
    "policies": [
      {
        "scope": "default",
        "code": "official-portfolios-read-only"
      },
      {
        "scope": "default",
        "code": "desk-portfolios"
      }
    ],
    "policyCollections": [
      {
        "scope": "default",
        "code": "CompanyEmployeeAccess"
      }
    ],
    "description": "Collection of organisation wide policies"
  }
]
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyCollectionResponse"
                  }
                },
                "example": [
  {
    "id": {
      "scope": "default",
      "code": "organisation-wide-policies"
    },
    "policies": [
      {
        "scope": "default",
        "code": "official-portfolios-read-only"
      },
      {
        "scope": "default",
        "code": "desk-portfolios"
      }
    ],
    "policyCollections": [
      {
        "scope": "default",
        "code": "CompanyEmployeeAccess"
      }
    ],
    "description": "Collection of organisation wide policies"
  }
]
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PolicyCollectionResponse"
                  }
                },
                "example": [
  {
    "id": {
      "scope": "default",
      "code": "organisation-wide-policies"
    },
    "policies": [
      {
        "scope": "default",
        "code": "official-portfolios-read-only"
      },
      {
        "scope": "default",
        "code": "desk-portfolios"
      }
    ],
    "policyCollections": [
      {
        "scope": "default",
        "code": "CompanyEmployeeAccess"
      }
    ],
    "description": "Collection of organisation wide policies"
  }
]
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      },
      "post": {
        "tags": [
          "Policies"
        ],
        "summary": "[EARLY ACCESS] Create PolicyCollection",
        "description": "Creates a PolicyCollection",
        "operationId": "CreatePolicyCollection",
        "requestBody": {
          "description": "The definition of the PolicyCollection",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCollectionCreationRequest"
              },
              "example": {
  "code": "example-policy-collection",
  "policies": [
    {
      "scope": "default",
      "code": "official-portfolios-read-only"
    },
    {
      "scope": "default",
      "code": "desk-portfolios"
    }
  ],
  "metadata": {},
  "policyCollections": [
    {
      "scope": "default",
      "code": "CompanyEmployeeAccess"
    }
  ],
  "description": "Example policy collection"
}
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCollectionCreationRequest"
              },
              "example": {
  "code": "example-policy-collection",
  "policies": [
    {
      "scope": "default",
      "code": "official-portfolios-read-only"
    },
    {
      "scope": "default",
      "code": "desk-portfolios"
    }
  ],
  "metadata": {},
  "policyCollections": [
    {
      "scope": "default",
      "code": "CompanyEmployeeAccess"
    }
  ],
  "description": "Example policy collection"
}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCollectionCreationRequest"
              },
              "example": {
  "code": "example-policy-collection",
  "policies": [
    {
      "scope": "default",
      "code": "official-portfolios-read-only"
    },
    {
      "scope": "default",
      "code": "desk-portfolios"
    }
  ],
  "metadata": {},
  "policyCollections": [
    {
      "scope": "default",
      "code": "CompanyEmployeeAccess"
    }
  ],
  "description": "Example policy collection"
}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCollectionCreationRequest"
              },
              "example": {
  "code": "example-policy-collection",
  "policies": [
    {
      "scope": "default",
      "code": "official-portfolios-read-only"
    },
    {
      "scope": "default",
      "code": "desk-portfolios"
    }
  ],
  "metadata": {},
  "policyCollections": [
    {
      "scope": "default",
      "code": "CompanyEmployeeAccess"
    }
  ],
  "description": "Example policy collection"
}
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created PolicyCollection",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyCollectionResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "organisation-wide-policies"
  },
  "policies": [
    {
      "scope": "default",
      "code": "official-portfolios-read-only"
    },
    {
      "scope": "default",
      "code": "desk-portfolios"
    }
  ],
  "policyCollections": [
    {
      "scope": "default",
      "code": "CompanyEmployeeAccess"
    }
  ],
  "description": "Collection of organisation wide policies"
}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyCollectionResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "organisation-wide-policies"
  },
  "policies": [
    {
      "scope": "default",
      "code": "official-portfolios-read-only"
    },
    {
      "scope": "default",
      "code": "desk-portfolios"
    }
  ],
  "policyCollections": [
    {
      "scope": "default",
      "code": "CompanyEmployeeAccess"
    }
  ],
  "description": "Collection of organisation wide policies"
}
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyCollectionResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "organisation-wide-policies"
  },
  "policies": [
    {
      "scope": "default",
      "code": "official-portfolios-read-only"
    },
    {
      "scope": "default",
      "code": "desk-portfolios"
    }
  ],
  "policyCollections": [
    {
      "scope": "default",
      "code": "CompanyEmployeeAccess"
    }
  ],
  "description": "Collection of organisation wide policies"
}
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/policycollections/{code}": {
      "get": {
        "tags": [
          "Policies"
        ],
        "summary": "[EARLY ACCESS] Get PolicyCollection",
        "description": "Gets an identified PolicyCollection",
        "operationId": "GetPolicyCollection",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The code of the PolicyCollection",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The code of the PolicyCollection"
            }
          },
          {
            "name": "asAt",
            "in": "query",
            "description": "Optional. The AsAt date time of the data",
            "schema": {
              "type": "string",
              "description": "Optional. The AsAt date time of the data",
              "format": "date-time",
              "nullable": true
            },
            "x-nullable": true
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Optional. Will use the default scope if not provided. The scope of the PolicyCollection",
            "schema": {
              "type": "string",
              "description": "Optional. Will use the default scope if not provided. The scope of the PolicyCollection",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested PolicyCollection",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyCollectionResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "organisation-wide-policies"
  },
  "policies": [
    {
      "scope": "default",
      "code": "official-portfolios-read-only"
    },
    {
      "scope": "default",
      "code": "desk-portfolios"
    }
  ],
  "policyCollections": [
    {
      "scope": "default",
      "code": "CompanyEmployeeAccess"
    }
  ],
  "description": "Collection of organisation wide policies"
}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyCollectionResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "organisation-wide-policies"
  },
  "policies": [
    {
      "scope": "default",
      "code": "official-portfolios-read-only"
    },
    {
      "scope": "default",
      "code": "desk-portfolios"
    }
  ],
  "policyCollections": [
    {
      "scope": "default",
      "code": "CompanyEmployeeAccess"
    }
  ],
  "description": "Collection of organisation wide policies"
}
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyCollectionResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "organisation-wide-policies"
  },
  "policies": [
    {
      "scope": "default",
      "code": "official-portfolios-read-only"
    },
    {
      "scope": "default",
      "code": "desk-portfolios"
    }
  ],
  "policyCollections": [
    {
      "scope": "default",
      "code": "CompanyEmployeeAccess"
    }
  ],
  "description": "Collection of organisation wide policies"
}
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      },
      "delete": {
        "tags": [
          "Policies"
        ],
        "summary": "[EARLY ACCESS] Delete PolicyCollection",
        "description": "Deletes an identified PolicyCollection",
        "operationId": "DeletePolicyCollection",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The code of the PolicyCollection",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The code of the PolicyCollection"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Optional. Will use the default scope if not provided. The scope of the PolicyCollection",
            "schema": {
              "type": "string",
              "description": "Optional. Will use the default scope if not provided. The scope of the PolicyCollection",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      },
      "put": {
        "tags": [
          "Policies"
        ],
        "summary": "[EARLY ACCESS] Update PolicyCollection",
        "description": "Updates a PolicyCollection",
        "operationId": "UpdatePolicyCollection",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The code of the PolicyCollection",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The code of the PolicyCollection"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Optional. Will use the default scope if not provided. The scope of the PolicyCollection",
            "schema": {
              "type": "string",
              "description": "Optional. Will use the default scope if not provided. The scope of the PolicyCollection",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "The updated definition of the PolicyCollection",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCollectionUpdateRequest"
              },
              "example": {
  "policies": [
    {
      "scope": "default",
      "code": "official-portfolios-read-only"
    },
    {
      "scope": "default",
      "code": "desk-portfolios"
    }
  ],
  "metadata": {},
  "policyCollections": [
    {
      "scope": "default",
      "code": "CompanyEmployeeAccess"
    }
  ],
  "description": "Example policy collection"
}
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCollectionUpdateRequest"
              },
              "example": {
  "policies": [
    {
      "scope": "default",
      "code": "official-portfolios-read-only"
    },
    {
      "scope": "default",
      "code": "desk-portfolios"
    }
  ],
  "metadata": {},
  "policyCollections": [
    {
      "scope": "default",
      "code": "CompanyEmployeeAccess"
    }
  ],
  "description": "Example policy collection"
}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCollectionUpdateRequest"
              },
              "example": {
  "policies": [
    {
      "scope": "default",
      "code": "official-portfolios-read-only"
    },
    {
      "scope": "default",
      "code": "desk-portfolios"
    }
  ],
  "metadata": {},
  "policyCollections": [
    {
      "scope": "default",
      "code": "CompanyEmployeeAccess"
    }
  ],
  "description": "Example policy collection"
}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PolicyCollectionUpdateRequest"
              },
              "example": {
  "policies": [
    {
      "scope": "default",
      "code": "official-portfolios-read-only"
    },
    {
      "scope": "default",
      "code": "desk-portfolios"
    }
  ],
  "metadata": {},
  "policyCollections": [
    {
      "scope": "default",
      "code": "CompanyEmployeeAccess"
    }
  ],
  "description": "Example policy collection"
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated PolicyCollection",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyCollectionResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "organisation-wide-policies"
  },
  "policies": [
    {
      "scope": "default",
      "code": "official-portfolios-read-only"
    },
    {
      "scope": "default",
      "code": "desk-portfolios"
    }
  ],
  "policyCollections": [
    {
      "scope": "default",
      "code": "CompanyEmployeeAccess"
    }
  ],
  "description": "Collection of organisation wide policies"
}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyCollectionResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "organisation-wide-policies"
  },
  "policies": [
    {
      "scope": "default",
      "code": "official-portfolios-read-only"
    },
    {
      "scope": "default",
      "code": "desk-portfolios"
    }
  ],
  "policyCollections": [
    {
      "scope": "default",
      "code": "CompanyEmployeeAccess"
    }
  ],
  "description": "Collection of organisation wide policies"
}
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/PolicyCollectionResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "organisation-wide-policies"
  },
  "policies": [
    {
      "scope": "default",
      "code": "official-portfolios-read-only"
    },
    {
      "scope": "default",
      "code": "desk-portfolios"
    }
  ],
  "policyCollections": [
    {
      "scope": "default",
      "code": "CompanyEmployeeAccess"
    }
  ],
  "description": "Collection of organisation wide policies"
}
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "[EARLY ACCESS] List Roles",
        "description": "Gets all Roles in a scope",
        "operationId": "ListRoles",
        "parameters": [
          {
            "name": "scope",
            "in": "query",
            "description": "Optional. Will use all scopes if not supplied. The requested scope",
            "schema": {
              "type": "string",
              "description": "Optional. Will use all scopes if not supplied. The requested scope",
              "nullable": true
            }
          },
          {
            "name": "asAt",
            "in": "query",
            "description": "Optional. The AsAt date time of the data",
            "schema": {
              "type": "string",
              "description": "Optional. The AsAt date time of the data",
              "format": "date-time",
              "nullable": true
            },
            "x-nullable": true
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Optional. Order the results by these fields. Use use the '-' sign to denote descending order e.g. -MyFieldName",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Optional. Order the results by these fields. Use use the '-' sign to denote descending order e.g. -MyFieldName",
              "nullable": true
            },
            "x-nullable": true
          },
          {
            "name": "start",
            "in": "query",
            "description": "Optional. When paginating, skip this number of results",
            "schema": {
              "type": "integer",
              "description": "Optional. When paginating, skip this number of results",
              "format": "int32",
              "nullable": true
            },
            "x-nullable": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Optional. When paginating, limit the number of returned results to this many.",
            "schema": {
              "type": "integer",
              "description": "Optional. When paginating, limit the number of returned results to this many.",
              "format": "int32",
              "nullable": true
            },
            "x-nullable": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Optional. Expression to filter the result set",
            "schema": {
              "type": "string",
              "description": "Optional. Expression to filter the result set",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Roles",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                },
                "example": [
  {
    "id": {
      "scope": "default",
      "code": "DevelopersRole"
    },
    "roleHierarchyIndex": 50,
    "description": "An example Role to identify my Developers",
    "resource": {
      "policyIdRoleResource": {
        "policies": [
          {
            "scope": "default",
            "code": "official-portfolios-read-only"
          },
          {
            "scope": "default",
            "code": "desk-portfolios"
          }
        ],
        "policyCollections": [
          {
            "scope": "default",
            "code": "CompanyEmployeeAccess"
          }
        ]
      }
    },
    "when": {
      "activate": "2016-08-31T18:00:00.0000000+00:00",
      "deactivate": "2020-08-31T18:00:00.0000000+00:00"
    },
    "permission": "Read"
  }
]
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                },
                "example": [
  {
    "id": {
      "scope": "default",
      "code": "DevelopersRole"
    },
    "roleHierarchyIndex": 50,
    "description": "An example Role to identify my Developers",
    "resource": {
      "policyIdRoleResource": {
        "policies": [
          {
            "scope": "default",
            "code": "official-portfolios-read-only"
          },
          {
            "scope": "default",
            "code": "desk-portfolios"
          }
        ],
        "policyCollections": [
          {
            "scope": "default",
            "code": "CompanyEmployeeAccess"
          }
        ]
      }
    },
    "when": {
      "activate": "2016-08-31T18:00:00.0000000+00:00",
      "deactivate": "2020-08-31T18:00:00.0000000+00:00"
    },
    "permission": "Read"
  }
]
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleResponse"
                  }
                },
                "example": [
  {
    "id": {
      "scope": "default",
      "code": "DevelopersRole"
    },
    "roleHierarchyIndex": 50,
    "description": "An example Role to identify my Developers",
    "resource": {
      "policyIdRoleResource": {
        "policies": [
          {
            "scope": "default",
            "code": "official-portfolios-read-only"
          },
          {
            "scope": "default",
            "code": "desk-portfolios"
          }
        ],
        "policyCollections": [
          {
            "scope": "default",
            "code": "CompanyEmployeeAccess"
          }
        ]
      }
    },
    "when": {
      "activate": "2016-08-31T18:00:00.0000000+00:00",
      "deactivate": "2020-08-31T18:00:00.0000000+00:00"
    },
    "permission": "Read"
  }
]
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "[EARLY ACCESS] Create Role",
        "description": "Creates a Role",
        "operationId": "CreateRole",
        "requestBody": {
          "description": "The definition of the Role",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleCreationRequest"
              },
              "example": {
  "code": "example-organisation-role-id",
  "description": "This is an example role to demonstrate their creation",
  "resource": {
    "policyIdRoleResource": {
      "policies": [
        {
          "scope": "default",
          "code": "official-portfolios-read-only"
        },
        {
          "scope": "default",
          "code": "desk-portfolios"
        }
      ],
      "policyCollections": [
        {
          "scope": "default",
          "code": "CompanyEmployeeAccess"
        }
      ]
    }
  },
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleCreationRequest"
              },
              "example": {
  "code": "example-organisation-role-id",
  "description": "This is an example role to demonstrate their creation",
  "resource": {
    "policyIdRoleResource": {
      "policies": [
        {
          "scope": "default",
          "code": "official-portfolios-read-only"
        },
        {
          "scope": "default",
          "code": "desk-portfolios"
        }
      ],
      "policyCollections": [
        {
          "scope": "default",
          "code": "CompanyEmployeeAccess"
        }
      ]
    }
  },
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleCreationRequest"
              },
              "example": {
  "code": "example-organisation-role-id",
  "description": "This is an example role to demonstrate their creation",
  "resource": {
    "policyIdRoleResource": {
      "policies": [
        {
          "scope": "default",
          "code": "official-portfolios-read-only"
        },
        {
          "scope": "default",
          "code": "desk-portfolios"
        }
      ],
      "policyCollections": [
        {
          "scope": "default",
          "code": "CompanyEmployeeAccess"
        }
      ]
    }
  },
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleCreationRequest"
              },
              "example": {
  "code": "example-organisation-role-id",
  "description": "This is an example role to demonstrate their creation",
  "resource": {
    "policyIdRoleResource": {
      "policies": [
        {
          "scope": "default",
          "code": "official-portfolios-read-only"
        },
        {
          "scope": "default",
          "code": "desk-portfolios"
        }
      ],
      "policyCollections": [
        {
          "scope": "default",
          "code": "CompanyEmployeeAccess"
        }
      ]
    }
  },
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created Role",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "DevelopersRole"
  },
  "roleHierarchyIndex": 50,
  "description": "An example Role to identify my Developers",
  "resource": {
    "policyIdRoleResource": {
      "policies": [
        {
          "scope": "default",
          "code": "official-portfolios-read-only"
        },
        {
          "scope": "default",
          "code": "desk-portfolios"
        }
      ],
      "policyCollections": [
        {
          "scope": "default",
          "code": "CompanyEmployeeAccess"
        }
      ]
    }
  },
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  },
  "permission": "Read"
}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "DevelopersRole"
  },
  "roleHierarchyIndex": 50,
  "description": "An example Role to identify my Developers",
  "resource": {
    "policyIdRoleResource": {
      "policies": [
        {
          "scope": "default",
          "code": "official-portfolios-read-only"
        },
        {
          "scope": "default",
          "code": "desk-portfolios"
        }
      ],
      "policyCollections": [
        {
          "scope": "default",
          "code": "CompanyEmployeeAccess"
        }
      ]
    }
  },
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  },
  "permission": "Read"
}
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "DevelopersRole"
  },
  "roleHierarchyIndex": 50,
  "description": "An example Role to identify my Developers",
  "resource": {
    "policyIdRoleResource": {
      "policies": [
        {
          "scope": "default",
          "code": "official-portfolios-read-only"
        },
        {
          "scope": "default",
          "code": "desk-portfolios"
        }
      ],
      "policyCollections": [
        {
          "scope": "default",
          "code": "CompanyEmployeeAccess"
        }
      ]
    }
  },
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  },
  "permission": "Read"
}
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/roles/{code}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "[EARLY ACCESS] Get Role",
        "description": "Gets an identified Role",
        "operationId": "GetRole",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The code of the Role",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The code of the Role"
            }
          },
          {
            "name": "asAt",
            "in": "query",
            "description": "Optional. The AsAt date time of the data",
            "schema": {
              "type": "string",
              "description": "Optional. The AsAt date time of the data",
              "format": "date-time",
              "nullable": true
            },
            "x-nullable": true
          },
          {
            "name": "scope",
            "in": "query",
            "description": "Optional. Will use default scope if not supplied. The scope of the Role",
            "schema": {
              "type": "string",
              "description": "Optional. Will use default scope if not supplied. The scope of the Role",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requested Role",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "DevelopersRole"
  },
  "roleHierarchyIndex": 50,
  "description": "An example Role to identify my Developers",
  "resource": {
    "policyIdRoleResource": {
      "policies": [
        {
          "scope": "default",
          "code": "official-portfolios-read-only"
        },
        {
          "scope": "default",
          "code": "desk-portfolios"
        }
      ],
      "policyCollections": [
        {
          "scope": "default",
          "code": "CompanyEmployeeAccess"
        }
      ]
    }
  },
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  },
  "permission": "Read"
}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "DevelopersRole"
  },
  "roleHierarchyIndex": 50,
  "description": "An example Role to identify my Developers",
  "resource": {
    "policyIdRoleResource": {
      "policies": [
        {
          "scope": "default",
          "code": "official-portfolios-read-only"
        },
        {
          "scope": "default",
          "code": "desk-portfolios"
        }
      ],
      "policyCollections": [
        {
          "scope": "default",
          "code": "CompanyEmployeeAccess"
        }
      ]
    }
  },
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  },
  "permission": "Read"
}
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "DevelopersRole"
  },
  "roleHierarchyIndex": 50,
  "description": "An example Role to identify my Developers",
  "resource": {
    "policyIdRoleResource": {
      "policies": [
        {
          "scope": "default",
          "code": "official-portfolios-read-only"
        },
        {
          "scope": "default",
          "code": "desk-portfolios"
        }
      ],
      "policyCollections": [
        {
          "scope": "default",
          "code": "CompanyEmployeeAccess"
        }
      ]
    }
  },
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  },
  "permission": "Read"
}
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "[EARLY ACCESS] Delete Role",
        "description": "Deletes an identified Role",
        "operationId": "DeleteRole",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The code of the Role",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The code of the Role"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": ">Optional. Will use default scope if not supplied. The scope of the Role",
            "schema": {
              "type": "string",
              "description": ">Optional. Will use default scope if not supplied. The scope of the Role",
              "nullable": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      },
      "put": {
        "tags": [
          "Roles"
        ],
        "summary": "[EARLY ACCESS] Update Role",
        "description": "Updates a Role",
        "operationId": "UpdateRole",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "The code of the Role",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The code of the Role"
            }
          },
          {
            "name": "scope",
            "in": "query",
            "description": ">Optional. Will use default scope if not supplied. The scope of the Role",
            "schema": {
              "type": "string",
              "description": ">Optional. Will use default scope if not supplied. The scope of the Role",
              "nullable": true
            }
          },
          {
            "name": "beforeScope",
            "in": "query",
            "description": "Optional. The scope of the Role. Will use default scope if not supplied.",
            "schema": {
              "type": "string",
              "description": "Optional. The scope of the Role. Will use default scope if not supplied.",
              "nullable": true
            }
          },
          {
            "name": "beforeCode",
            "in": "query",
            "description": "Optional. The code of the Role",
            "schema": {
              "type": "string",
              "description": "Optional. The code of the Role",
              "nullable": true
            }
          },
          {
            "name": "afterScope",
            "in": "query",
            "description": "Optional. The scope of the Role. Will use default scope if not supplied.",
            "schema": {
              "type": "string",
              "description": "Optional. The scope of the Role. Will use default scope if not supplied.",
              "nullable": true
            }
          },
          {
            "name": "afterCode",
            "in": "query",
            "description": "Optional. The code of the Role",
            "schema": {
              "type": "string",
              "description": "Optional. The code of the Role",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "description": "The updated definition of the Role",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleUpdateRequest"
              },
              "example": {
  "description": "This is an example role to demonstrate their update",
  "resource": {
    "policyIdRoleResource": {
      "policies": [
        {
          "scope": "default",
          "code": "official-portfolios-read-only"
        },
        {
          "scope": "default",
          "code": "desk-portfolios"
        }
      ],
      "policyCollections": [
        {
          "scope": "default",
          "code": "CompanyEmployeeAccess"
        }
      ]
    }
  },
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleUpdateRequest"
              },
              "example": {
  "description": "This is an example role to demonstrate their update",
  "resource": {
    "policyIdRoleResource": {
      "policies": [
        {
          "scope": "default",
          "code": "official-portfolios-read-only"
        },
        {
          "scope": "default",
          "code": "desk-portfolios"
        }
      ],
      "policyCollections": [
        {
          "scope": "default",
          "code": "CompanyEmployeeAccess"
        }
      ]
    }
  },
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleUpdateRequest"
              },
              "example": {
  "description": "This is an example role to demonstrate their update",
  "resource": {
    "policyIdRoleResource": {
      "policies": [
        {
          "scope": "default",
          "code": "official-portfolios-read-only"
        },
        {
          "scope": "default",
          "code": "desk-portfolios"
        }
      ],
      "policyCollections": [
        {
          "scope": "default",
          "code": "CompanyEmployeeAccess"
        }
      ]
    }
  },
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RoleUpdateRequest"
              },
              "example": {
  "description": "This is an example role to demonstrate their update",
  "resource": {
    "policyIdRoleResource": {
      "policies": [
        {
          "scope": "default",
          "code": "official-portfolios-read-only"
        },
        {
          "scope": "default",
          "code": "desk-portfolios"
        }
      ],
      "policyCollections": [
        {
          "scope": "default",
          "code": "CompanyEmployeeAccess"
        }
      ]
    }
  },
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  }
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated Role",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "DevelopersRole"
  },
  "roleHierarchyIndex": 50,
  "description": "An example Role to identify my Developers",
  "resource": {
    "policyIdRoleResource": {
      "policies": [
        {
          "scope": "default",
          "code": "official-portfolios-read-only"
        },
        {
          "scope": "default",
          "code": "desk-portfolios"
        }
      ],
      "policyCollections": [
        {
          "scope": "default",
          "code": "CompanyEmployeeAccess"
        }
      ]
    }
  },
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  },
  "permission": "Read"
}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "DevelopersRole"
  },
  "roleHierarchyIndex": 50,
  "description": "An example Role to identify my Developers",
  "resource": {
    "policyIdRoleResource": {
      "policies": [
        {
          "scope": "default",
          "code": "official-portfolios-read-only"
        },
        {
          "scope": "default",
          "code": "desk-portfolios"
        }
      ],
      "policyCollections": [
        {
          "scope": "default",
          "code": "CompanyEmployeeAccess"
        }
      ]
    }
  },
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  },
  "permission": "Read"
}
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "DevelopersRole"
  },
  "roleHierarchyIndex": 50,
  "description": "An example Role to identify my Developers",
  "resource": {
    "policyIdRoleResource": {
      "policies": [
        {
          "scope": "default",
          "code": "official-portfolios-read-only"
        },
        {
          "scope": "default",
          "code": "desk-portfolios"
        }
      ],
      "policyCollections": [
        {
          "scope": "default",
          "code": "CompanyEmployeeAccess"
        }
      ]
    }
  },
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  },
  "permission": "Read"
}
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ],
        "x-fbn-apistatus": "EarlyAccess"
      }
    },
    "/api/roles/{scope}/{code}/policycollections": {
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "[EXPERIMENTAL] Add policy collections to a role",
        "description": "Assigns policy collections to a role",
        "operationId": "AddPolicyCollectionToRole",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "description": "The scope of the Role",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The scope of the Role"
            }
          },
          {
            "name": "code",
            "in": "path",
            "description": "The code of the Role",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The code of the Role"
            }
          }
        ],
        "requestBody": {
          "description": "The policy collections to add",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPolicyCollectionToRoleRequest"
              },
              "example": {
  "policyCollections": [
    {
      "scope": "ScopeValue",
      "code": "SomePolCollectionCode"
    },
    {
      "scope": "ScopeValue2",
      "code": "AnotherPolicyCollection"
    }
  ]
}
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPolicyCollectionToRoleRequest"
              },
              "example": {
  "policyCollections": [
    {
      "scope": "ScopeValue",
      "code": "SomePolCollectionCode"
    },
    {
      "scope": "ScopeValue2",
      "code": "AnotherPolicyCollection"
    }
  ]
}
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPolicyCollectionToRoleRequest"
              },
              "example": {
  "policyCollections": [
    {
      "scope": "ScopeValue",
      "code": "SomePolCollectionCode"
    },
    {
      "scope": "ScopeValue2",
      "code": "AnotherPolicyCollection"
    }
  ]
}
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddPolicyCollectionToRoleRequest"
              },
              "example": {
  "policyCollections": [
    {
      "scope": "ScopeValue",
      "code": "SomePolCollectionCode"
    },
    {
      "scope": "ScopeValue2",
      "code": "AnotherPolicyCollection"
    }
  ]
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "AddPolicyCollectionToRole",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "DevelopersRole"
  },
  "roleHierarchyIndex": 50,
  "description": "An example Role to identify my Developers",
  "resource": {
    "policyIdRoleResource": {
      "policies": [
        {
          "scope": "default",
          "code": "official-portfolios-read-only"
        },
        {
          "scope": "default",
          "code": "desk-portfolios"
        }
      ],
      "policyCollections": [
        {
          "scope": "default",
          "code": "CompanyEmployeeAccess"
        }
      ]
    }
  },
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  },
  "permission": "Read"
}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "DevelopersRole"
  },
  "roleHierarchyIndex": 50,
  "description": "An example Role to identify my Developers",
  "resource": {
    "policyIdRoleResource": {
      "policies": [
        {
          "scope": "default",
          "code": "official-portfolios-read-only"
        },
        {
          "scope": "default",
          "code": "desk-portfolios"
        }
      ],
      "policyCollections": [
        {
          "scope": "default",
          "code": "CompanyEmployeeAccess"
        }
      ]
    }
  },
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  },
  "permission": "Read"
}
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "DevelopersRole"
  },
  "roleHierarchyIndex": 50,
  "description": "An example Role to identify my Developers",
  "resource": {
    "policyIdRoleResource": {
      "policies": [
        {
          "scope": "default",
          "code": "official-portfolios-read-only"
        },
        {
          "scope": "default",
          "code": "desk-portfolios"
        }
      ],
      "policyCollections": [
        {
          "scope": "default",
          "code": "CompanyEmployeeAccess"
        }
      ]
    }
  },
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  },
  "permission": "Read"
}
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ],
        "x-fbn-apistatus": "Experimental"
      }
    },
    "/api/roles/{scope}/{code}/policycollections/{policycollectionscope}/{policycollectioncode}": {
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "[EXPERIMENTAL] Remove policy collection from role",
        "description": "Removes a policy collection from a role",
        "operationId": "RemovePolicyCollectionFromRole",
        "parameters": [
          {
            "name": "scope",
            "in": "path",
            "description": "The scope of the Role",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The scope of the Role"
            }
          },
          {
            "name": "code",
            "in": "path",
            "description": "The code of the Role",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The code of the Role"
            }
          },
          {
            "name": "policycollectionscope",
            "in": "path",
            "description": "The scope of policy collection to remove from the Role",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The scope of policy collection to remove from the Role"
            }
          },
          {
            "name": "policycollectioncode",
            "in": "path",
            "description": "The code of the policy collection to remove from the Role",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The code of the policy collection to remove from the Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RemovePolicyCollectionFromRole",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "DevelopersRole"
  },
  "roleHierarchyIndex": 50,
  "description": "An example Role to identify my Developers",
  "resource": {
    "policyIdRoleResource": {
      "policies": [
        {
          "scope": "default",
          "code": "official-portfolios-read-only"
        },
        {
          "scope": "default",
          "code": "desk-portfolios"
        }
      ],
      "policyCollections": [
        {
          "scope": "default",
          "code": "CompanyEmployeeAccess"
        }
      ]
    }
  },
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  },
  "permission": "Read"
}
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "DevelopersRole"
  },
  "roleHierarchyIndex": 50,
  "description": "An example Role to identify my Developers",
  "resource": {
    "policyIdRoleResource": {
      "policies": [
        {
          "scope": "default",
          "code": "official-portfolios-read-only"
        },
        {
          "scope": "default",
          "code": "desk-portfolios"
        }
      ],
      "policyCollections": [
        {
          "scope": "default",
          "code": "CompanyEmployeeAccess"
        }
      ]
    }
  },
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  },
  "permission": "Read"
}
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleResponse"
                },
                "example": {
  "id": {
    "scope": "default",
    "code": "DevelopersRole"
  },
  "roleHierarchyIndex": 50,
  "description": "An example Role to identify my Developers",
  "resource": {
    "policyIdRoleResource": {
      "policies": [
        {
          "scope": "default",
          "code": "official-portfolios-read-only"
        },
        {
          "scope": "default",
          "code": "desk-portfolios"
        }
      ],
      "policyCollections": [
        {
          "scope": "default",
          "code": "CompanyEmployeeAccess"
        }
      ]
    }
  },
  "when": {
    "activate": "2016-08-31T18:00:00.0000000+00:00",
    "deactivate": "2020-08-31T18:00:00.0000000+00:00"
  },
  "permission": "Read"
}
              }
            }
          },
          "400": {
            "description": "The details of the input related failure",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "Error response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LusidProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [ ]
          }
        ],
        "x-fbn-apistatus": "Experimental"
      }
    }
  },
  "components": {
    "schemas": {
      "PolicyId": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "scope": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string",
            "nullable": true
          },
          "code": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Grant": {
        "enum": [
          "Undefined",
          "Allow",
          "Deny"
        ],
        "type": "string"
      },
      "Operator": {
        "enum": [
          "Undefined",
          "Equals",
          "NotEquals",
          "GreaterThan",
          "GreaterThanOrEqualTo",
          "LessThan",
          "LessThanOrEqualTo",
          "In"
        ],
        "type": "string"
      },
      "MetadataExpression": {
        "required": [
          "metadataKey",
          "operator"
        ],
        "type": "object",
        "properties": {
          "metadataKey": {
            "minLength": 1,
            "type": "string"
          },
          "operator": {
            "$ref": "#/components/schemas/Operator"
          },
          "textValue": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ActionId": {
        "required": [
          "activity",
          "entity",
          "scope"
        ],
        "type": "object",
        "properties": {
          "scope": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string"
          },
          "activity": {
            "maxLength": 25,
            "minLength": 3,
            "type": "string"
          },
          "entity": {
            "maxLength": 25,
            "minLength": 3,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "MetadataSelectorDefinition": {
        "required": [
          "actions",
          "expressions"
        ],
        "type": "object",
        "properties": {
          "expressions": {
            "minLength": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetadataExpression"
            }
          },
          "actions": {
            "minLength": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionId"
            }
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdSelectorDefinition": {
        "required": [
          "actions",
          "identifier"
        ],
        "type": "object",
        "properties": {
          "identifier": {
            "minLength": 1,
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "actions": {
            "minLength": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionId"
            }
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MatchAllSelectorDefinition": {
        "required": [
          "actions"
        ],
        "type": "object",
        "properties": {
          "actions": {
            "minLength": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionId"
            }
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PolicySelectorDefinition": {
        "required": [
          "actions"
        ],
        "type": "object",
        "properties": {
          "identityRestriction": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "restrictionSelectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectorDefinition"
            },
            "nullable": true
          },
          "actions": {
            "minLength": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionId"
            }
          },
          "name": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SelectorDefinition": {
        "type": "object",
        "properties": {
          "metadataSelectorDefinition": {
            "$ref": "#/components/schemas/MetadataSelectorDefinition"
          },
          "idSelectorDefinition": {
            "$ref": "#/components/schemas/IdSelectorDefinition"
          },
          "matchAllSelectorDefinition": {
            "$ref": "#/components/schemas/MatchAllSelectorDefinition"
          },
          "policySelectorDefinition": {
            "$ref": "#/components/schemas/PolicySelectorDefinition"
          }
        },
        "additionalProperties": false
      },
      "AsAtPredicateContract": {
        "type": "object",
        "properties": {
          "value": {
            "maxLength": 25,
            "minLength": 5,
            "type": "string",
            "nullable": true
          },
          "dateTimeOffset": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AsAtRangeForSpec": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "$ref": "#/components/schemas/AsAtPredicateContract"
          },
          "to": {
            "$ref": "#/components/schemas/AsAtPredicateContract"
          }
        },
        "additionalProperties": false
      },
      "PointInTimeSpecification": {
        "enum": [
          "Undefined",
          "Now",
          "FirstOfMonth",
          "FirstBusinessDayOfTheMonth",
          "LastDayOfTheMonth",
          "LastBusinessDayOfMonth",
          "FirstDayOfYear",
          "LastDayOfYear"
        ],
        "type": "string"
      },
      "DateUnit": {
        "enum": [
          "Undefined",
          "Minute",
          "Hour",
          "Day",
          "BusinessDay",
          "Weeks",
          "Months",
          "Years"
        ],
        "type": "string"
      },
      "RelativeToDateTime": {
        "enum": [
          "Undefined",
          "BeforeOrOn",
          "Before",
          "OnDayOf",
          "AfterOrOn",
          "After",
          "Exactly"
        ],
        "type": "string"
      },
      "AsAtRelative": {
        "type": "object",
        "properties": {
          "date": {
            "$ref": "#/components/schemas/PointInTimeSpecification"
          },
          "adjustment": {
            "type": "integer",
            "format": "int32"
          },
          "unit": {
            "$ref": "#/components/schemas/DateUnit"
          },
          "relativeToDateTime": {
            "$ref": "#/components/schemas/RelativeToDateTime"
          }
        },
        "additionalProperties": false
      },
      "DateQuality": {
        "enum": [
          "Undefined",
          "IsFirstDayOfAnyMonth",
          "IsLastDayOfAnyMonth",
          "IsBusinessDayOfAnyMonth",
          "IsFirstDayOfTheCurrentMonth",
          "IsLastDayOfTheCurrentMonth",
          "IsBusinessDayOfTheCurrentMonth",
          "IsBeforeMidday",
          "IsBefore5pm",
          "IsAfter5pm"
        ],
        "type": "string"
      },
      "EffectiveDateHasQuality": {
        "type": "object",
        "properties": {
          "quality": {
            "$ref": "#/components/schemas/DateQuality"
          }
        },
        "additionalProperties": false
      },
      "EffectiveDateRelative": {
        "type": "object",
        "properties": {
          "date": {
            "$ref": "#/components/schemas/PointInTimeSpecification"
          },
          "adjustment": {
            "type": "integer",
            "format": "int32"
          },
          "unit": {
            "$ref": "#/components/schemas/DateUnit"
          },
          "relativeToDateTime": {
            "$ref": "#/components/schemas/RelativeToDateTime"
          }
        },
        "additionalProperties": false
      },
      "EffectiveRange": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ForSpec": {
        "type": "object",
        "properties": {
          "asAtRangeForSpec": {
            "$ref": "#/components/schemas/AsAtRangeForSpec"
          },
          "asAtRelative": {
            "$ref": "#/components/schemas/AsAtRelative"
          },
          "effectiveDateHasQuality": {
            "$ref": "#/components/schemas/EffectiveDateHasQuality"
          },
          "effectiveDateRelative": {
            "$ref": "#/components/schemas/EffectiveDateRelative"
          },
          "effectiveRange": {
            "$ref": "#/components/schemas/EffectiveRange"
          }
        },
        "additionalProperties": false
      },
      "TextOperator": {
        "enum": [
          "Undefined",
          "EqualsCaseSensitive",
          "EqualsCaseInsensitive",
          "NotEqualsCaseSensitive",
          "NotEqualsCaseInsensitive",
          "ContainsCaseSensitive",
          "NotPresentOrNotContainsCaseSensitive",
          "NotPresent"
        ],
        "type": "string"
      },
      "IfRequestHeaderExpression": {
        "required": [
          "headerName",
          "operator"
        ],
        "type": "object",
        "properties": {
          "headerName": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string"
          },
          "operator": {
            "$ref": "#/components/schemas/TextOperator"
          },
          "value": {
            "maxLength": 4096,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IfIdentityClaimExpression": {
        "required": [
          "claimType",
          "claimValueType",
          "operator"
        ],
        "type": "object",
        "properties": {
          "claimType": {
            "type": "string"
          },
          "claimValueType": {
            "type": "string"
          },
          "claimIssuer": {
            "type": "string",
            "nullable": true
          },
          "claimOriginalIssuer": {
            "type": "string",
            "nullable": true
          },
          "operator": {
            "$ref": "#/components/schemas/TextOperator"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IfIdentityScopeExpression": {
        "required": [
          "scopeName"
        ],
        "type": "object",
        "properties": {
          "scopeName": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "IfExpression": {
        "type": "object",
        "properties": {
          "ifRequestHeaderExpression": {
            "$ref": "#/components/schemas/IfRequestHeaderExpression"
          },
          "ifIdentityClaimExpression": {
            "$ref": "#/components/schemas/IfIdentityClaimExpression"
          },
          "ifIdentityScopeExpression": {
            "$ref": "#/components/schemas/IfIdentityScopeExpression"
          }
        },
        "additionalProperties": false
      },
      "WhenSpec": {
        "required": [
          "activate"
        ],
        "type": "object",
        "properties": {
          "activate": {
            "type": "string",
            "format": "date-time"
          },
          "deactivate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "KeyValuePairOfStringToString": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HowSpec": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValuePairOfStringToString"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Link": {
        "required": [
          "href",
          "method",
          "relation"
        ],
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "href": {
            "type": "string",
            "format": "uri"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "method": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PolicyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/PolicyId"
          },
          "description": {
            "type": "string",
            "description": "Description of what the policy is entitling",
            "nullable": true
          },
          "applications": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Applications to which the policy applies",
            "nullable": true
          },
          "grant": {
            "$ref": "#/components/schemas/Grant"
          },
          "selectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectorDefinition"
            },
            "description": "Selectors that this policy will be applied to",
            "nullable": true
          },
          "for": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForSpec"
            },
            "description": "\"For Specification\" for when the policy is to be applied",
            "nullable": true
          },
          "if": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IfExpression"
            },
            "description": "\"If Specification\" for when the policy is to be applied",
            "nullable": true
          },
          "when": {
            "$ref": "#/components/schemas/WhenSpec"
          },
          "how": {
            "$ref": "#/components/schemas/HowSpec"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Response object from the policy API"
      },
      "LusidValidationProblemDetails": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "errorDetails": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LusidProblemDetails": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "errorDetails": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": false
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "LicenceSelectorDefinition": {
        "required": [
          "actionIds",
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "The code of the licence"
          },
          "actionIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionId"
            }
          },
          "name": {
            "type": "string",
            "description": "The name of this selector within the licence (for reporting and diagnostic purposes)",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A description of the point of this selector within this licence",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Resource selector for identifying which resources a licence applies to"
      },
      "LicenceCreationRequest": {
        "required": [
          "applications",
          "code",
          "description",
          "selectors",
          "when"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_ +]{2,100}$",
            "type": "string"
          },
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string"
          },
          "applications": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "selectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LicenceSelectorDefinition"
            }
          },
          "when": {
            "$ref": "#/components/schemas/WhenSpec"
          },
          "for": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForSpec"
            },
            "nullable": true
          },
          "how": {
            "$ref": "#/components/schemas/HowSpec"
          },
          "if": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IfExpression"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to create a licence policy"
      },
      "LicenceUpdateRequest": {
        "required": [
          "applications",
          "description",
          "selectors",
          "when"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string"
          },
          "applications": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "selectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LicenceSelectorDefinition"
            }
          },
          "when": {
            "$ref": "#/components/schemas/WhenSpec"
          },
          "for": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForSpec"
            },
            "nullable": true
          },
          "how": {
            "$ref": "#/components/schemas/HowSpec"
          },
          "if": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IfExpression"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Request to update a licence policy"
      },
      "RoleId": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "scope": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string",
            "nullable": true
          },
          "code": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PolicyType": {
        "enum": [
          "Undefined",
          "Entitlement",
          "Licence"
        ],
        "type": "string"
      },
      "AttachedPolicyDefinitionResponse": {
        "type": "object",
        "properties": {
          "sourceRole": {
            "$ref": "#/components/schemas/RoleId"
          },
          "roleHierarchyIndex": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "applications": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "policyType": {
            "$ref": "#/components/schemas/PolicyType"
          },
          "id": {
            "$ref": "#/components/schemas/PolicyId"
          },
          "grant": {
            "$ref": "#/components/schemas/Grant"
          },
          "selectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectorDefinition"
            },
            "nullable": true
          },
          "for": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForSpec"
            },
            "nullable": true
          },
          "if": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IfExpression"
            },
            "nullable": true
          },
          "when": {
            "$ref": "#/components/schemas/WhenSpec"
          },
          "how": {
            "$ref": "#/components/schemas/HowSpec"
          }
        },
        "additionalProperties": false
      },
      "RequestedActionKey": {
        "required": [
          "activity",
          "entityCode",
          "scope"
        ],
        "type": "object",
        "properties": {
          "entityCode": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string",
            "description": "The type of the resource on which the activity would be performed"
          },
          "scope": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string",
            "description": "The scope/provider/vendor of the activity"
          },
          "activity": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string",
            "description": "The identifier of the action to be performed on the resource"
          }
        },
        "additionalProperties": false,
        "description": "A fully qualified action identifier"
      },
      "RequestDetails": {
        "required": [
          "action"
        ],
        "type": "object",
        "properties": {
          "action": {
            "$ref": "#/components/schemas/RequestedActionKey"
          },
          "fromEffectiveDate": {
            "type": "string",
            "description": "The start date for the requested effective date range for the resource (if null, UtcNow)",
            "format": "date-time",
            "nullable": true
          },
          "toEffectiveDate": {
            "type": "string",
            "description": "The end date for the requested effective date range for the resource (if null, same as from date)",
            "format": "date-time",
            "nullable": true
          },
          "fromAsAt": {
            "type": "string",
            "description": "The requested AsAt date for the resource (if null, Latest). If specifying a range of AsAt dates, this is the lower bounds.",
            "format": "date-time",
            "nullable": true
          },
          "toAsAt": {
            "type": "string",
            "description": "Upper bound if specifying a request that requires a range of AsAt dates. This is used if specifying the desire to grant access for a user between an AsAt range.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The details of the requested evaluation"
      },
      "EntitlementMetadata": {
        "type": "object",
        "properties": {
          "provider": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResourceDetails": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The identifier of the resource being evaluated"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EntitlementMetadata"
              }
            },
            "description": "Any metadata associated with the resource being requested",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Details about the resource being requested that may be pertinent to the entitlement evaluation"
      },
      "EvaluationRequest": {
        "required": [
          "request",
          "resource"
        ],
        "type": "object",
        "properties": {
          "request": {
            "$ref": "#/components/schemas/RequestDetails"
          },
          "resource": {
            "$ref": "#/components/schemas/ResourceDetails"
          }
        },
        "additionalProperties": false,
        "description": "Specification for a server side evaluation of entitlement."
      },
      "EvaluationResult": {
        "enum": [
          "Denied",
          "Granted",
          "DeniedAsLicenceRequired"
        ],
        "type": "string"
      },
      "EvaluationResponse": {
        "required": [
          "result"
        ],
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/EvaluationResult"
          },
          "detailedMessage": {
            "type": "string",
            "description": "In the case of the evaluation being denied a message may be returned",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The result of an evaluation request"
      },
      "AccessControlledAction": {
        "required": [
          "action",
          "description"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "The description of the action"
          },
          "action": {
            "$ref": "#/components/schemas/ActionId"
          },
          "limitedSet": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdSelectorDefinition"
            },
            "description": "When populated, the provided values are the limited set of resources that are allowed to be specified for\r\naccess control for this action",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "An action that can be access controlled"
      },
      "IdentifierPartSchema": {
        "required": [
          "description",
          "displayName",
          "index",
          "name",
          "required"
        ],
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "description": "The typical index in the identifier in which this part appears",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of the identifier part that can/should be provided for this resource type"
          },
          "displayName": {
            "type": "string",
            "description": "The display name of the identifier part"
          },
          "description": {
            "type": "string",
            "description": "A brief description of the point of this identifier part"
          },
          "required": {
            "type": "boolean",
            "description": "Whether a value is required to be provided"
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "The schema of an contributing part of a valid LUSID resource identifier"
      },
      "AccessControlledResource": {
        "required": [
          "actions",
          "description"
        ],
        "type": "object",
        "properties": {
          "application": {
            "type": "string",
            "description": "The application to which this resource belongs",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The display name of the resource",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "The description of the resource"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessControlledAction"
            },
            "description": "The actions acceptable for this type of resource"
          },
          "identifierParts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentifierPartSchema"
            },
            "description": "The constituent parts of a valid identifier for this resource",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A resource to which access can be controlled"
      },
      "ResourceListOfAccessControlledResource": {
        "required": [
          "values"
        ],
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessControlledResource"
            }
          },
          "href": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          },
          "nextPage": {
            "type": "string",
            "nullable": true
          },
          "previousPage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PolicyCreationRequest": {
        "required": [
          "code",
          "grant",
          "selectors",
          "when"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_ +]{2,100}$",
            "type": "string",
            "description": "Code of the policy being created"
          },
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "Description of what the policy will be used for",
            "nullable": true
          },
          "applications": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Applications this policy is used with",
            "nullable": true
          },
          "grant": {
            "$ref": "#/components/schemas/Grant"
          },
          "selectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectorDefinition"
            },
            "description": "Selectors that identify what resources this policy qualifies for"
          },
          "for": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForSpec"
            },
            "description": "\"For Specification\" for when the policy is to be applied",
            "nullable": true
          },
          "if": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IfExpression"
            },
            "description": "\"If Specification\" for when the policy is to be applied",
            "nullable": true
          },
          "when": {
            "$ref": "#/components/schemas/WhenSpec"
          },
          "how": {
            "$ref": "#/components/schemas/HowSpec"
          }
        },
        "additionalProperties": false
      },
      "PolicyUpdateRequest": {
        "required": [
          "grant",
          "selectors",
          "when"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "Description of what the policy will be used for",
            "nullable": true
          },
          "applications": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Applications this policy is used with",
            "nullable": true
          },
          "grant": {
            "$ref": "#/components/schemas/Grant"
          },
          "selectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SelectorDefinition"
            },
            "description": "Selectors that identify what resources this policy qualifies for"
          },
          "for": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ForSpec"
            },
            "description": "\"For Specification\" for when the policy is to be applied",
            "nullable": true
          },
          "if": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IfExpression"
            },
            "description": "\"If Specification\" for when the policy is to be applied",
            "nullable": true
          },
          "when": {
            "$ref": "#/components/schemas/WhenSpec"
          },
          "how": {
            "$ref": "#/components/schemas/HowSpec"
          }
        },
        "additionalProperties": false,
        "description": "Update policy request"
      },
      "PolicyCollectionId": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "scope": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string",
            "nullable": true
          },
          "code": {
            "maxLength": 100,
            "minLength": 3,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "PolicyCollectionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/PolicyCollectionId"
          },
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyId"
            },
            "description": "The identifiers of the Policies in this collection",
            "nullable": true
          },
          "policyCollections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyCollectionId"
            },
            "description": "The identifiers of the PolicyCollections in this collection",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "A description of this policy collection",
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "A PolicyCollection encapsulating one or more Policies and PolicyCollections"
      },
      "PolicyCollectionCreationRequest": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 100,
            "minLength": 3,
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_ +]{2,100}$",
            "type": "string",
            "description": "The identifier for the PolicyCollection being created"
          },
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyId"
            },
            "description": "The identifiers of the Policies in this collection",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EntitlementMetadata"
              }
            },
            "description": "Any relevant metadata associated with this resource for controlling access to this resource",
            "nullable": true
          },
          "policyCollections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyCollectionId"
            },
            "description": "The identifiers of the PolicyCollections in this collection",
            "nullable": true
          },
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "A description of this policy collection",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Create a PolicyCollection, a logical group of Policies or other PolicyCollections"
      },
      "PolicyCollectionUpdateRequest": {
        "type": "object",
        "properties": {
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyId"
            },
            "description": "The identifiers of the Policies in this collection",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/EntitlementMetadata"
              }
            },
            "description": "Any relevant metadata associated with this resource for controlling access to this resource",
            "nullable": true
          },
          "policyCollections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyCollectionId"
            },
            "description": "The identifiers of the PolicyCollections in this collection",
            "nullable": true
          },
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "description": "A description of this policy collection",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Update an existing PolicyCollection"
      },
      "NonTransitiveSupervisorRoleResource": {
        "required": [
          "roles"
        ],
        "type": "object",
        "properties": {
          "roles": {
            "minLength": 1,
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "additionalProperties": false
      },
      "PolicyIdRoleResource": {
        "type": "object",
        "properties": {
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyId"
            },
            "nullable": true
          },
          "policyCollections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyCollectionId"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoleResourceRequest": {
        "type": "object",
        "properties": {
          "nonTransitiveSupervisorRoleResource": {
            "$ref": "#/components/schemas/NonTransitiveSupervisorRoleResource"
          },
          "policyIdRoleResource": {
            "$ref": "#/components/schemas/PolicyIdRoleResource"
          }
        },
        "additionalProperties": false,
        "description": "RoleResourceRequest"
      },
      "RoleResponse": {
        "required": [
          "id",
          "permission",
          "resource",
          "roleHierarchyIndex",
          "when"
        ],
        "type": "object",
        "properties": {
          "id": {
            "$ref": "#/components/schemas/RoleId"
          },
          "roleHierarchyIndex": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "resource": {
            "$ref": "#/components/schemas/RoleResourceRequest"
          },
          "when": {
            "$ref": "#/components/schemas/WhenSpec"
          },
          "permission": {
            "type": "string"
          },
          "limit": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RoleCreationRequest": {
        "required": [
          "code",
          "resource",
          "when"
        ],
        "type": "object",
        "properties": {
          "code": {
            "pattern": "^[a-zA-Z][a-zA-Z0-9-_ +]{2,100}$",
            "type": "string"
          },
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "resource": {
            "$ref": "#/components/schemas/RoleResourceRequest"
          },
          "when": {
            "$ref": "#/components/schemas/WhenSpec"
          }
        },
        "additionalProperties": false
      },
      "RoleUpdateRequest": {
        "required": [
          "resource",
          "when"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 1024,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "resource": {
            "$ref": "#/components/schemas/RoleResourceRequest"
          },
          "when": {
            "$ref": "#/components/schemas/WhenSpec"
          }
        },
        "additionalProperties": false,
        "description": "Role update does not allow the changing of the id"
      },
      "AddPolicyCollectionToRoleRequest": {
        "required": [
          "policyCollections"
        ],
        "type": "object",
        "properties": {
          "policyCollections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyCollectionId"
            },
            "description": "Identifiers of policy collections to add to a role"
          }
        },
        "additionalProperties": false,
        "description": "Request body used to add Policy Collections to a Role"
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "description": "OAuth2 Implicit Grant",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://lusid.okta.com/oauth2/default/v1/authorize",
            "scopes": { }
          }
        }
      }
    }
  },
  "security": [
    { }
  ],
  "tags": [
    {
      "name": "Application Metadata",
      "description": "Methods for querying application metadata"
    },
    {
      "name": "Licences",
      "description": "Endpoints for administering with Licences"
    },
    {
      "name": "Policies",
      "description": "Endpoints for interacting with the current user's access rights"
    },
    {
      "name": "Roles",
      "description": "Endpoints for administering with Roles"
    }
  ],
  "x-tagGroups": {
    "name": "API",
    "tags": [
      "Application Metadata",
      "Licences",
      "Policies",
      "Roles"
    ]
  }
}